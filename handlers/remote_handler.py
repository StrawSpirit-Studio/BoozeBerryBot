import platform
import os
import ctypes
import subprocess
import asyncio
import pyautogui
from datetime import datetime
import win32gui
import win32process
import psutil

async def remote_handler(client, message):
    if message.text and "$lock" in message.text:
        try:
            if platform.system() == "Windows":
                ctypes.windll.user32.LockWorkStation()
                await message.edit_text("üîí –ö–æ–º–ø'—é—Ç–µ—Ä –∑–∞–±–ª–æ–∫–æ–≤–∞–Ω–æ")
            elif platform.system() == "Linux":
                os.system("xdg-screensaver lock")
                await message.edit_text("üîí –ö–æ–º–ø'—é—Ç–µ—Ä –∑–∞–±–ª–æ–∫–æ–≤–∞–Ω–æ")
            else:
                await message.edit_text("‚ùå –û–ø–µ—Ä–∞—Ü—ñ–π–Ω–∞ —Å–∏—Å—Ç–µ–º–∞ –Ω–µ –ø—ñ–¥—Ç—Ä–∏–º—É—î—Ç—å—Å—è")
        except Exception as e:
            await message.edit_text(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –±–ª–æ–∫—É–≤–∞–Ω–Ω—ñ: {str(e)}")
            
    elif message.text and "$sleep" in message.text:
        try:
            if platform.system() == "Windows":
                await message.edit_text("üò¥ –ü–µ—Ä–µ—Ö–æ–¥–∂—É –≤ —Ä–µ–∂–∏–º —Å–Ω—É...")
                os.system("rundll32.exe powrprof.dll,SetSuspendState 0,1,0")
            elif platform.system() == "Linux":
                await message.edit_text("üò¥ –ü–µ—Ä–µ—Ö–æ–¥–∂—É –≤ —Ä–µ–∂–∏–º —Å–Ω—É...")
                os.system("systemctl suspend")
            else:
                await message.edit_text("‚ùå –û–ø–µ—Ä–∞—Ü—ñ–π–Ω–∞ —Å–∏—Å—Ç–µ–º–∞ –Ω–µ –ø—ñ–¥—Ç—Ä–∏–º—É—î—Ç—å—Å—è")
        except Exception as e:
            await message.edit_text(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ—Ö–æ–¥—ñ –≤ —Ä–µ–∂–∏–º —Å–Ω—É: {str(e)}")
            
    elif message.text and "$spotify" in message.text:
        try:
            if platform.system() == "Windows":
                # –ó–∞–ø—É—Å–∫–∞—î–º–æ Spotify
                spotify_path = os.path.expandvars(r"%APPDATA%\Spotify\Spotify.exe")
                if os.path.exists(spotify_path):
                    subprocess.Popen(spotify_path)
                    # –ß–µ–∫–∞—î–º–æ –ø–æ–∫–∏ Spotify –∑–∞–ø—É—Å—Ç–∏—Ç—å—Å—è
                    await asyncio.sleep(3)
                    # –°–∏–º—É–ª—é—î–º–æ –Ω–∞—Ç–∏—Å–∫–∞–Ω–Ω—è Ctrl+L –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥—É –¥–æ –±—ñ–±–ª—ñ–æ—Ç–µ–∫–∏
                    pyautogui.hotkey('ctrl', 'l')
                    await asyncio.sleep(1)
                    # –ù–∞—Ç–∏—Å–∫–∞—î–º–æ –ø—Ä–æ–±—ñ–ª –¥–ª—è –ø–æ—á–∞—Ç–∫—É –≤—ñ–¥—Ç–≤–æ—Ä–µ–Ω–Ω—è
                    pyautogui.press('space')
                    await message.edit_text("üéµ Spotify –∑–∞–ø—É—â–µ–Ω–æ, –º—É–∑–∏–∫–∞ –≤—ñ–¥—Ç–≤–æ—Ä—é—î—Ç—å—Å—è")
                else:
                    await message.edit_text("‚ùå Spotify –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ")
            else:
                await message.edit_text("‚ùå –ö–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç—ñ–ª—å–∫–∏ –¥–ª—è Windows")
        except Exception as e:
            await message.edit_text(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫—É Spotify: {str(e)}")
            
    elif message.text and "$hibernate" in message.text:
        try:
            if platform.system() == "Windows":
                await message.edit_text("üí§ –ü–µ—Ä–µ—Ö–æ–¥–∂—É –≤ —Ä–µ–∂–∏–º –≥—ñ–±–µ—Ä–Ω–∞—Ü—ñ—ó...")
                os.system("shutdown /h /f")
            elif platform.system() == "Linux":
                await message.edit_text("üí§ –ü–µ—Ä–µ—Ö–æ–¥–∂—É –≤ —Ä–µ–∂–∏–º –≥—ñ–±–µ—Ä–Ω–∞—Ü—ñ—ó...")
                os.system("systemctl hibernate")
            else:
                await message.edit_text("‚ùå –û–ø–µ—Ä–∞—Ü—ñ–π–Ω–∞ —Å–∏—Å—Ç–µ–º–∞ –Ω–µ –ø—ñ–¥—Ç—Ä–∏–º—É—î—Ç—å—Å—è")
        except Exception as e:
            await message.edit_text(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –≥—ñ–±–µ—Ä–Ω–∞—Ü—ñ—ó: {str(e)}")
            
    elif message.text and "$screen" in message.text:
        try:
            msg =await message.reply("üì∏")
            
            # –û—Ç—Ä–∏–º—É—î–º–æ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ –∞–∫—Ç–∏–≤–Ω–µ –≤—ñ–∫–Ω–æ —Ç–∞ –π–æ–≥–æ –ø—Ä–æ—Ü–µ—Å
            active_window = "–ù–µ–≤—ñ–¥–æ–º–æ"
            window_time = "–ù–µ–≤—ñ–¥–æ–º–æ"
            if platform.system() == "Windows":
                # –û—Ç—Ä–∏–º—É—î–º–æ —Ö–µ–Ω–¥–ª –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –≤—ñ–∫–Ω–∞
                hwnd = win32gui.GetForegroundWindow()
                active_window = win32gui.GetWindowText(hwnd)
                
                # –û—Ç—Ä–∏–º—É—î–º–æ PID –ø—Ä–æ—Ü–µ—Å—É
                _, pid = win32process.GetWindowThreadProcessId(hwnd)
                try:
                    # –û—Ç—Ä–∏–º—É—î–º–æ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ –ø—Ä–æ—Ü–µ—Å
                    process = psutil.Process(pid)
                    # –û—Ç—Ä–∏–º—É—î–º–æ —á–∞—Å —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –ø—Ä–æ—Ü–µ—Å—É
                    process_time = datetime.now() - datetime.fromtimestamp(process.create_time())
                    hours = process_time.seconds // 3600
                    minutes = (process_time.seconds % 3600) // 60
                    window_time = f"{hours}–≥ {minutes}—Ö–≤"
                except:
                    window_time = "–ù–µ–≤—ñ–¥–æ–º–æ"
            
            # –°—Ç–≤–æ—Ä—é—î–º–æ –ø–∞–ø–∫—É downloads —è–∫—â–æ —ó—ó –Ω–µ–º–∞—î
            downloads_path = os.path.join(os.path.dirname(os.path.dirname(__file__)), 'downloads')
            os.makedirs(downloads_path, exist_ok=True)
            
            # –°—Ç–≤–æ—Ä—é—î–º–æ —Å–∫—Ä—ñ–Ω—à–æ—Ç
            screenshot = pyautogui.screenshot()
            
            # –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –∑ —É–Ω—ñ–∫–∞–ª—å–Ω–∏–º —ñ–º'—è–º –≤ downloads
            filename = f"screenshot_{datetime.now().strftime('%Y%m%d_%H%M%S')}.png"
            filepath = os.path.join(downloads_path, filename)
            screenshot.save(filepath)
            
            # –§–æ—Ä–º—É—î–º–æ —Ç–µ–∫—Å—Ç –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
            caption = (
                f"üì∏ **–°–∫—Ä—ñ–Ω—à–æ—Ç —Ä–æ–±–æ—á–æ–≥–æ —Å—Ç–æ–ª—É**\n"
                f"ü™ü **–ê–∫—Ç–∏–≤–Ω–µ –≤—ñ–∫–Ω–æ**: {active_window}\n"
                f"‚è± **–ß–∞—Å —Ä–æ–±–æ—Ç–∏**: {window_time}"
            )
            
            # –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ —Ñ–∞–π–ª –∑ –ø—ñ–¥–ø–∏—Å–æ–º
            await message.reply_photo(filepath, caption=caption)
            
            # –í–∏–¥–∞–ª—è—î–º–æ —Ç–∏–º—á–∞—Å–æ–≤–∏–π —Ñ–∞–π–ª
            os.remove(filepath)
            
            # –í–∏–¥–∞–ª—è—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –ø—Ä–æ—Ü–µ—Å
            await message.delete()
            await msg.delete()
            
        except Exception as e:
            await message.edit_text(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—ñ —Å–∫—Ä—ñ–Ω—à–æ—Ç—É: {str(e)}")