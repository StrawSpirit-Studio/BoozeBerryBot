from ping3 import ping

# –•–µ–Ω–¥–ª–µ—Ä –¥–ª—è –ø—ñ–Ω–≥—É–≤–∞–Ω–Ω—è —Å–µ—Ä–≤–µ—Ä—ñ–≤ —á–∏ —Å–∞–π—Ç—ñ–≤
async def sping_handler(client, message):
    if message.text and "$sping" in message.text:
        # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–∞ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å –∞—Ä–≥—É–º–µ–Ω—Ç—ñ–≤
        command = message.text.split()
        
        # –Ø–∫—â–æ –∞—Ä–≥—É–º–µ–Ω—Ç—ñ–≤ –Ω–µ–º–∞—î, –≤–∏–≤–æ–¥–∏–º–æ –ø—ñ–¥–∫–∞–∑–∫—É
        if len(command) < 2:
            await message.edit_text("üîç **–í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è:**\n`$sping <–∞–¥—Ä–µ—Å–∞> [–∫—ñ–ª—å–∫—ñ—Å—Ç—å] [–±–∞–π—Ç–∏]`\nüìç –ù–∞–ø—Ä–∏–∫–ª–∞–¥: `$sping google.com 10 64` –∞–±–æ `$sping 192.168.0.1`\nüìå **–ö—ñ–ª—å–∫—ñ—Å—Ç—å –ø—ñ–Ω–≥—ñ–≤** –∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º = 4, **—Ä–æ–∑–º—ñ—Ä –ø–∞–∫–µ—Ç—É** –∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º = 32 –±–∞–π—Ç–∏.")
            return

        host = command[1]
        num_pings = 4  # –ö—ñ–ª—å–∫—ñ—Å—Ç—å –ø—ñ–Ω–≥—ñ–≤ –∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º
        packet_size = 32  # –†–æ–∑–º—ñ—Ä –ø–∞–∫–µ—Ç—É –≤ –±–∞–π—Ç–∞—Ö –∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º

        # –Ø–∫—â–æ —î –¥–æ–¥–∞—Ç–∫–æ–≤—ñ –∞—Ä–≥—É–º–µ–Ω—Ç–∏, –∑–º—ñ–Ω—é—î–º–æ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –ø—ñ–Ω–≥—ñ–≤ —ñ –±–∞–π—Ç–∏
        if len(command) >= 3:
            try:
                num_pings = int(command[2])
            except ValueError:
                await message.edit_text("‚ùå **–ü–æ–º–∏–ª–∫–∞:** –ö—ñ–ª—å–∫—ñ—Å—Ç—å –ø—ñ–Ω–≥—ñ–≤ –ø–æ–≤–∏–Ω–Ω–∞ –±—É—Ç–∏ —á–∏—Å–ª–æ–º.")
                return

        if len(command) >= 4:
            try:
                packet_size = int(command[3])
            except ValueError:
                await message.edit_text("‚ùå **–ü–æ–º–∏–ª–∫–∞:** –†–æ–∑–º—ñ—Ä –ø–∞–∫–µ—Ç—É (–±–∞–π—Ç–∏) –ø–æ–≤–∏–Ω–µ–Ω –±—É—Ç–∏ —á–∏—Å–ª–æ–º.")
                return

        response_times = []

        try:
            # –ü—ñ–Ω–≥—É—î–º–æ —Ö–æ—Å—Ç –∫—ñ–ª—å–∫–∞ —Ä–∞–∑—ñ–≤
            for _ in range(num_pings):
                response_time = ping(host, size=packet_size)
                if response_time is not None:
                    response_times.append(response_time * 1000)  # –ü–µ—Ä–µ—Ç–≤–æ—Ä—é—î–º–æ –≤ –º—Å
                else:
                    response_times.append(None)

            # –Ø–∫—â–æ —î –ø—ñ–Ω–≥–∏
            if response_times:
                successful_pings = [time for time in response_times if time is not None]
                failed_pings = num_pings - len(successful_pings)
                
                if successful_pings:
                    min_time = min(successful_pings)
                    max_time = max(successful_pings)
                    avg_time = sum(successful_pings) / len(successful_pings)

                    result_message = f"üåê **Pinging {host} with {packet_size} bytes of data:**\n"
                    for i, time in enumerate(response_times):
                        if time is not None:
                            result_message += f"‚úÖ **Reply** from {host}: bytes={packet_size} time={time:.0f}ms TTL=64\n"
                        else:
                            result_message += f"‚ùå **Request timed out.**\n"
                    
                    result_message += f"\nüìä **Ping statistics** for {host}:\n"
                    result_message += f"    üì§ Sent = {num_pings}, üì• Received = {len(successful_pings)}, ‚ùå Lost = {failed_pings} ({(failed_pings / num_pings) * 100}% loss)\n"
                    result_message += f"‚è≥ Approximate round trip times in milli-seconds:\n"
                    result_message += f"    üïí Minimum = {min_time:.0f}ms, üïî Maximum = {max_time:.0f}ms, üïê Average = {avg_time:.0f}ms"
                    
                    await message.edit_text(result_message)
                else:
                    await message.edit_text(f"‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è –æ—Ç—Ä–∏–º–∞—Ç–∏ –≤—ñ–¥–ø–æ–≤—ñ–¥—å –≤—ñ–¥ {host} –ø—ñ—Å–ª—è {num_pings} –ø—ñ–Ω–≥—ñ–≤.")
            else:
                await message.edit_text(f"‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è –ø—ñ–Ω–≥—É–≤–∞—Ç–∏ {host}.")
                
        except Exception as e:
            await message.edit_text(f"‚ö†Ô∏è **–°—Ç–∞–ª–∞—Å—è –ø–æ–º–∏–ª–∫–∞:** {str(e)}")
